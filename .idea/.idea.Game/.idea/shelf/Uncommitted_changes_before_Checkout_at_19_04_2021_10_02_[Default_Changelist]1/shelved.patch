Index: MainForm.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing System.Windows.Forms;\r\nusing System.Drawing;\r\nusing System.Drawing.Drawing2D;\r\n\r\nnamespace Game\r\n{\r\n    public class MainForm : Form\r\n    {\r\n        private static Size menuButtonSize = new Size(180, 60);\r\n        private static Font menuButtonFont = new Font(\"Arial\", 16);\r\n        private static Image backgroundImage = Image.FromFile(@\"..\\..\\assets\\a.png\");\r\n\r\n        private static TableLayoutPanel MenuTable;\r\n        private static TableLayoutPanel SettingsTable;\r\n        private static TableLayoutPanel PauseTable;\r\n        \r\n        public MainForm()\r\n        {\r\n            Size = new Size(1280, 720);\r\n            FormBorderStyle = FormBorderStyle.FixedDialog;\r\n\r\n            MenuTable = MenuBuilder(\r\n                ButtonBuilder(\"Новая игра\", (s, e) => {\r\n                    Controls.Remove(MenuTable);\r\n                    Paint += RunGame;\r\n                }),\r\n                ButtonBuilder(\"Настройки\", (s, e) =>\r\n                {\r\n                    Controls.Remove(MenuTable);\r\n                    Controls.Add(SettingsTable);\r\n                }),\r\n                ButtonBuilder(\"Выход\", (s, e) => Application.Exit())\r\n            );\r\n\r\n            SettingsTable = MenuBuilder(\r\n                CheckBoxBuilder(\"Полный экран\", (s, e) => {}),\r\n                TrackBarBuilder(\"Громкость\", (s, e) => {}),\r\n                ButtonBuilder(\"Назад\", (s, e) =>\r\n                {\r\n                    Controls.Remove(SettingsTable);\r\n                    Controls.Add(MenuTable);\r\n                }));\r\n            \r\n            Controls.Add(MenuTable);\r\n        }\r\n\r\n        private void RunGame(object sender, PaintEventArgs e)\r\n        {\r\n            var g = e.Graphics;\r\n            \r\n            g.DrawImage(Image.FromFile(@\"..\\..\\assets\\playerSource.bmp\"), new Point(100, 500));\r\n            BackgroundImage = backgroundImage;\r\n            \r\n            \r\n        }\r\n\r\n        private static TableLayoutPanel MenuBuilder(params Control[] buttons)\r\n        {\r\n            var table = new TableLayoutPanel();\r\n            \r\n            table.BackgroundImage = backgroundImage;\r\n            \r\n            table.Anchor = AnchorStyles.Top;\r\n            table.Dock = DockStyle.Fill;\r\n            \r\n            table.RowStyles.Clear();\r\n            \r\n            for (int i = 0; i < 4; i++)\r\n                table.RowStyles.Add(new RowStyle(SizeType.Percent, 16));\r\n            \r\n            table.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 85));\r\n            table.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 15));\r\n\r\n            var placeHolder = new Panel() { BackColor = Color.Transparent };\r\n            \r\n            table.Controls.Add(placeHolder, 1, 0);\r\n            \r\n            for (int i = 0; i < buttons.Length; i++)\r\n                table.Controls.Add(buttons[i], 0, i + 1);\r\n\r\n            return table;\r\n        }\r\n        \r\n        private static Button ButtonBuilder(string name, EventHandler action)\r\n        {\r\n            var button = new Button()\r\n            {\r\n                Text = name,\r\n                Size = menuButtonSize,\r\n                Font = menuButtonFont,\r\n                ForeColor = Color.DarkGoldenrod,\r\n                BackColor = Color.Transparent,\r\n                Anchor = AnchorStyles.Right,\r\n                FlatStyle = FlatStyle.Flat,\r\n            };\r\n            \r\n            button.GotFocus += (sender, args) => button.BackColor = Color.DarkSlateBlue;\r\n            button.MouseEnter += (sender, args) => button.BackColor = Color.DarkSlateBlue;\r\n\r\n            button.LostFocus += (sender, args) => button.BackColor = Color.Transparent;\r\n            button.MouseLeave += (sender, args) => button.BackColor = Color.Transparent;\r\n\r\n            button.Click += action;\r\n\r\n            return button;\r\n        }\r\n\r\n        private static TrackBar TrackBarBuilder(string name, EventHandler scroll)\r\n        {\r\n            var trackBar = new TrackBar()\r\n            {\r\n                Text = name,\r\n                Size = menuButtonSize,\r\n                Font = menuButtonFont,\r\n                Anchor = AnchorStyles.Right,\r\n                //BackColor = Color.Black,\r\n                //ForeColor = Color.DarkGoldenrod,\r\n                Minimum = 0,\r\n                Maximum = 4,\r\n                TickFrequency = 1,\r\n            };\r\n            \r\n            trackBar.Scroll += scroll;\r\n\r\n            return trackBar;\r\n        }\r\n\r\n        private static CheckBox CheckBoxBuilder(string name, EventHandler checkedChanged)\r\n        {\r\n            var checkBox = new CheckBox()\r\n            {\r\n                Text = name,\r\n                Size = menuButtonSize,\r\n                Font = menuButtonFont,\r\n                ForeColor = Color.DarkGoldenrod,\r\n                FlatStyle = FlatStyle.Flat,\r\n                Anchor = AnchorStyles.Right,\r\n                BackColor = Color.Transparent,\r\n                Checked = false,\r\n            };\r\n            \r\n            checkBox.GotFocus += (sender, args) => checkBox.BackColor = Color.DarkSlateBlue;\r\n            checkBox.MouseEnter += (sender, args) => checkBox.BackColor = Color.DarkSlateBlue;\r\n\r\n            checkBox.LostFocus += (sender, args) => checkBox.BackColor = Color.Transparent;\r\n            checkBox.MouseLeave += (sender, args) => checkBox.BackColor = Color.Transparent;\r\n\r\n            checkBox.CheckedChanged += checkedChanged;\r\n\r\n            return checkBox;\r\n        }\r\n    }\r\n}
===================================================================
--- MainForm.cs	(revision 81f4a550288d781ea0898d02ac573a037f0e8e2a)
+++ MainForm.cs	(date 1618806072878)
@@ -35,7 +35,8 @@
             );
 
             SettingsTable = MenuBuilder(
-                CheckBoxBuilder("Полный экран", (s, e) => {}),
+                CheckBoxBuilder("Полный экран", 
+                    (s, e) => {}),
                 TrackBarBuilder("Громкость", (s, e) => {}),
                 ButtonBuilder("Назад", (s, e) =>
                 {
Index: .idea/.idea.Game/.idea/contentModel.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ContentModelStore\">\r\n    <e p=\"C:\\UrFU\\game\\game\" t=\"IncludeRecursive\">\r\n      <e p=\"bin\" t=\"ExcludeRecursive\" />\r\n      <e p=\"Game.csproj\" t=\"IncludeRecursive\" />\r\n      <e p=\"Game.sln\" t=\"IncludeFlat\" />\r\n      <e p=\"obj\" t=\"ExcludeRecursive\" />\r\n      <e p=\"packages\" t=\"ExcludeRecursive\" />\r\n      <e p=\"Program.cs\" t=\"Include\" />\r\n      <e p=\"Properties\" t=\"Include\">\r\n        <e p=\"AssemblyInfo.cs\" t=\"Include\" />\r\n      </e>\r\n    </e>\r\n    <e p=\"C:\\Users\\razzerone\\AppData\\Local\\JetBrains\\Rider2020.2\\extResources\" t=\"IncludeRecursive\" />\r\n    <e p=\"C:\\Users\\razzerone\\AppData\\Local\\JetBrains\\Rider2020.2\\resharper-host\\Local\\Transient\\Rider\\v202\\SolutionCaches\\_Game.-288308521.00\" t=\"ExcludeRecursive\" />\r\n    <e p=\"C:\\Users\\razzerone\\AppData\\Roaming\\JetBrains\\Rider2020.2\\scratches\" t=\"IncludeRecursive\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.idea.Game/.idea/contentModel.xml	(revision 81f4a550288d781ea0898d02ac573a037f0e8e2a)
+++ .idea/.idea.Game/.idea/contentModel.xml	(date 1618805258384)
@@ -2,9 +2,14 @@
 <project version="4">
   <component name="ContentModelStore">
     <e p="C:\UrFU\game\game" t="IncludeRecursive">
+      <e p="Assets" t="Include">
+        <e p="a.png" t="Include" />
+        <e p="playerSource.bmp" t="Include" />
+      </e>
       <e p="bin" t="ExcludeRecursive" />
       <e p="Game.csproj" t="IncludeRecursive" />
       <e p="Game.sln" t="IncludeFlat" />
+      <e p="MainForm.cs" t="Include" />
       <e p="obj" t="ExcludeRecursive" />
       <e p="packages" t="ExcludeRecursive" />
       <e p="Program.cs" t="Include" />
diff --git .idea/.idea.Game/.idea/shelf/Uncommitted_changes_before_Checkout_at_12_04_2021_1_54__Default_Changelist_.xml .idea/.idea.Game/.idea/shelf/Uncommitted_changes_before_Checkout_at_12_04_2021_1_54__Default_Changelist_.xml
